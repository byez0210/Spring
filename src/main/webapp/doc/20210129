spring 설정
1. xml
2. java
3. xml + java 
** 설정 파일을 용도에 따라 여러개로 분리 가능 

에러 
complier 시점 - 로딩(서버기동)시점 - runtime (실행을 해야만 발생하는 에러)

xml에 값을 표시하는 방법은 문자열 밖에 없음
value= "5"

5라고 표시한 값을 java의 문자열 타입으로 해석할지, 숫자 타입으로 해석할지는
해당 clas의 필드 타입을 보고 스프링이 결정핫게 된다 

대다수의 타입은 스프링 프레임 워크 타입을 자동으로 변경하는 것이 가능하나

날짜 타입에 개해서는 국가별, 사용자별 표기 형식이 다르기 때문에
프레임 워크에서 임의로 타입 변호한을 하는 것이 불가능 하다
(UserVo reg_dt 컬럼)

스플링 프레임 워크에서 타입 변환이 필요한 경우는 크게 두가지
2. 값을 주입할 때
2. 컨트롤러에서 파라미터를 value 객체에 바인딩 할떄

스프링 프레임 워트에서 커스텀 타입 변환을 등록하는 방법은 크게 3가지
1. propertyEditor : 문자 <==> 타입 간의 변환
2. conversionService : 타입 <==> 타입 간의 변환
3. formattingConversionService : 타입 <==> 타입 간의 변환

1~3의 방법을 동시에 적용하는 것은 불가능
2,3 의 경우 스프링 빈의 이름을 id="conversionService"로 사용하도록 스프링에서 강제함

1번 : 생략
2번 : 1. 스프링에서 제동하는 ConversionSericeFactryBean 클래스를 스프링 빈으로 등록
		(위에서 언급한 스프링 빈 이름을 준수해야 함)
	 2. 해당 클래스의 converters필드에 개발자가 만든 converter를 set으로 주입
		. 개발자가 만든 converter는 Converter 인터페이스를 구현하여 만든다
	
3번 : 1.스프링에서 제공하는 FormaattingConversionServiceFactoryBean 클래스를 스프링 빈으로 등록
         (위에서 언급한 스프링 빈 이름을 준수해야 함)
     2. Value 객체의 필드에 어노테이션 적용
      
